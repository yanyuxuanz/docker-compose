input {
  kafka {
    bootstrap_servers => "kafka:9092"
    group_id => "demo"
    client_id => "logstash"
    auto_offset_reset => "earliest"
    topics => ["nginx-external-access", "nginx-external-error"]
    codec => json { charset => "UTF-8" }
    decorate_events => true
  }
}

filter {
  if [fields][source] in ["nginx-external-error"] {
    grok {
       match => ["message", "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:error}(?:, client: (?<client>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server}?)(?:, request: %{QS:request})?(?:, upstream: (?<upstream>\"%{URI}\"|%{QS}))?(?:, host: %{QS:request_host})?(?:, referrer: \"%{URI:referrer}\")?"]
    }
    date {
      timezone => "Asia/Shanghai"
      match => ["timestamp","yyyy/MM/dd HH:mm:ss"]
    }
  } else {
    mutate {
      convert => [ "status","integer" ]
      convert => [ "size","integer" ]
      convert => [ "upstreatime","float" ]
      convert => ["[geoip][coordinates]", "float"]
    }
  }
  mutate {
    convert => ["[geoip][coordinates]", "float"]
  }
  date {
    match => [ "timestamp" ,"dd/MMM/YYYY:HH:mm:ss Z" ]
  }
  geoip {
    source => "client"
    target => "geoip"
    database =>"/usr/share/GeoIP/GeoLite2-City.mmdb"
    add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
    add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
  }
  mutate {
    remove_field => "timestamp"
    remove_field => "message"
  }
  if "_geoip_lookup_failure" in [tags] { drop { } } ### 如果解析的地址是内网IP geoip解析将会失败，会生成_geoip_lookup_failure字段，这段话的意思是如果内网地址 drop掉这个字段。
}

output {
  stdout {
    codec => rubydebug
  }
  elasticsearch {
    hosts    => ["elasticsearch:9200"]
    index    => "%{[@metadata][kafka][topic]}"
    user     => "elastic"
    password => "feb1f9a47775a60b57e87cfc5ba1924d"
  }
}